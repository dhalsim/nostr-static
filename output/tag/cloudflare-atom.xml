<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nostr Articles</title>
  <id>https://blog.nostrize.me</id>
  <updated>2025-05-05T19:58:49+03:00</updated>
  <subtitle>Nostr Articles Feed</subtitle>
  <link href="https://blog.nostrize.me"></link>
  <author>
    <name>Nostr Static</name>
  </author>
  <entry>
    <title>How to Run Your Own Nostr Relay on Android with Cloudflare Domain</title>
    <updated>2025-04-23T23:23:34+03:00</updated>
    <id>tag:blog.nostrize.me,2025-04-23:/naddr1qvzqqqr4gupzqmnyhq7p7e60kq997xvpds5hkeq5hanlq9vffczd6nr9062pqthgqq2j6ezsgu69j7n92cmxxmfsgyeyyvjtxfuk7lwjq6s.html</id>
    <content type="html">&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Install Citrine on your Android device:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Visit &lt;a href=&#34;https://github.com/greenart7c3/Citrine/releases&#34;&gt;https://github.com/greenart7c3/Citrine/releases&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Download the latest release using:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;zap.store&lt;/li&gt;&#xA;&lt;li&gt;Obtainium&lt;/li&gt;&#xA;&lt;li&gt;F-Droid&lt;/li&gt;&#xA;&lt;li&gt;Or download the APK directly&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may need to enable &amp;quot;Install from Unknown Sources&amp;quot; in your Android settings&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Domain Requirements:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Purchase a domain if you don&#39;t have one&lt;/li&gt;&#xA;&lt;li&gt;Transfer your domain to Cloudflare if it&#39;s not already there (for free SSL certificates and cloudflared support)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Tools to use:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;nak (the nostr army knife):&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Download from &lt;a href=&#34;https://github.com/fiatjaf/nak/releases&#34;&gt;https://github.com/fiatjaf/nak/releases&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Installation steps:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For Linux/macOS:&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Download the appropriate version for your system&#xA;wget https://github.com/fiatjaf/nak/releases/latest/download/nak-linux-amd64  # for Linux&#xA;# or&#xA;wget https://github.com/fiatjaf/nak/releases/latest/download/nak-darwin-amd64  # for macOS&#xA;&#xA;# Make it executable&#xA;chmod +x nak-*&#xA;&#xA;# Move to a directory in your PATH&#xA;sudo mv nak-* /usr/local/bin/nak&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;For Windows:&#xA;&lt;pre&gt;&lt;code class=&#34;language-batch&#34;&gt;# Download the Windows version&#xA;curl -L -o nak.exe https://github.com/fiatjaf/nak/releases/latest/download/nak-windows-amd64.exe&#xA;&#xA;# Move to a directory in your PATH (e.g., C:\Windows)&#xA;move nak.exe C:\Windows\nak.exe&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Verify installation:&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak --version&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;setting-up-citrine&#34;&gt;Setting Up Citrine&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the Citrine app&lt;/li&gt;&#xA;&lt;li&gt;Start the server&lt;/li&gt;&#xA;&lt;li&gt;You&#39;ll see it running on &lt;code&gt;ws://127.0.0.1:4869&lt;/code&gt; (local network only)&lt;/li&gt;&#xA;&lt;li&gt;Go to settings and paste your npub into &amp;quot;Accept events signed by&amp;quot; inbox and press the + button. This prevents others from publishing events to your personal relay.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;installing-required-tools&#34;&gt;Installing Required Tools&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install Termux from Google Play Store&lt;/li&gt;&#xA;&lt;li&gt;Open Termux and run:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pkg update &amp;amp;&amp;amp; pkg install wget&#xA;wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64.deb&#xA;dpkg -i cloudflared-linux-arm64.deb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;cloudflare-authentication&#34;&gt;Cloudflare Authentication&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Run the authentication command:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cloudflared tunnel login&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Follow the instructions:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Copy the provided URL to your browser&lt;/li&gt;&#xA;&lt;li&gt;Log in to your Cloudflare account&lt;/li&gt;&#xA;&lt;li&gt;If the URL expires, copy it again after logging in&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;creating-the-tunnel&#34;&gt;Creating the Tunnel&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a new tunnel:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cloudflared tunnel create &amp;lt;TUNNEL_NAME&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Choose any name you prefer for your tunnel&lt;/li&gt;&#xA;&lt;li&gt;Copy the tunnel ID after creating the tunnel&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Create and configure the tunnel config:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch ~/.cloudflared/config.yml&#xA;nano ~/.cloudflared/config.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Add this configuration (replace the placeholders with your values):&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;tunnel: &amp;lt;TUNNEL_UUID&amp;gt;&#xA;credentials-file: /data/data/com.termux/files/home/.cloudflared/&amp;lt;TUNNEL_UUID&amp;gt;.json&#xA;ingress:&#xA;  - hostname: nostr.yourdomain.com&#xA;    service: ws://localhost:4869&#xA;  - service: http_status:404&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; In nano editor:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL+O&lt;/code&gt; and Enter to save&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;CTRL+X&lt;/code&gt; to exit&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; Check the credentials file path in the logs&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Validate your configuration:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cloudflared tunnel validate&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;Start the tunnel:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cloudflared tunnel run my-relay&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;preventing-android-from-killing-the-tunnel&#34;&gt;Preventing Android from Killing the Tunnel&lt;/h2&gt;&#xA;&lt;p&gt;Run these commands to maintain tunnel stability:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;date &amp;amp;&amp;amp; apt install termux-tools &amp;amp;&amp;amp; termux-setup-storage &amp;amp;&amp;amp; termux-wake-lock&#xA;echo &amp;quot;nameserver 1.1.1.1&amp;quot; &amp;gt; $PREFIX/etc/resolv.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; You can open multiple Termux sessions by swiping from the left edge of the screen while keeping your tunnel process running.&lt;/p&gt;&#xA;&lt;h2 id=&#34;updating-your-outbox-model-relays&#34;&gt;Updating Your Outbox Model Relays&lt;/h2&gt;&#xA;&lt;p&gt;Once your relay is running and accessible via your domain, you&#39;ll want to update your relay list in the Nostr network. This ensures other clients know about your relay and can connect to it.&lt;/p&gt;&#xA;&lt;h3 id=&#34;decoding-npub-public-key&#34;&gt;Decoding npub (Public Key)&lt;/h3&gt;&#xA;&lt;p&gt;Private keys (nsec) and public keys (npub) are encoded in bech32 format, which includes:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;A prefix (like nsec1, npub1 etc.)&lt;/li&gt;&#xA;&lt;li&gt;The encoded data&lt;/li&gt;&#xA;&lt;li&gt;A checksum&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;This format makes keys:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Easy to distinguish&lt;/li&gt;&#xA;&lt;li&gt;Hard to copy incorrectly&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;However, most tools require these keys in hexadecimal (hex) format.&lt;/p&gt;&#xA;&lt;p&gt;To decode an npub string to its hex format:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak decode nostr:npub1dejts0qlva8mqzjlrxqkc2tmvs2t7elszky5upxaf3jha9qs9m5q605uc4&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Change it with your own npub.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{&#xA;  &amp;quot;pubkey&amp;quot;: &amp;quot;6e64b83c1f674fb00a5f19816c297b6414bf67f015894e04dd4c657e94102ee8&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Copy the pubkey value in quotes.&lt;/p&gt;&#xA;&lt;h3 id=&#34;create-a-kind-10002-event-with-your-relay-list&#34;&gt;Create a kind 10002 event with your relay list:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Include your new relay with write permissions&lt;/li&gt;&#xA;&lt;li&gt;Include other relays you want to read from and write to, omit 3rd parameter to make it both read and write&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Example format:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &amp;quot;kind&amp;quot;: 10002,&#xA;  &amp;quot;tags&amp;quot;: [&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://your-relay-domain.com&amp;quot;, &amp;quot;write&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://eden.nostr.land/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://nos.lol/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://nostr.bitcoiner.social/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://nostr.mom/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://relay.primal.net/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://nostr.wine/&amp;quot;, &amp;quot;read&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://relay.damus.io/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://relay.nostr.band/&amp;quot;],&#xA;    [&amp;quot;r&amp;quot;, &amp;quot;wss://relay.snort.social/&amp;quot;]&#xA;  ],&#xA;  &amp;quot;content&amp;quot;: &amp;quot;&amp;quot;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Save it to a file called &lt;code&gt;event.json&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Add or remove any relays you want. To check your existing 10002 relays:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Visit &lt;a href=&#34;https://nostr.band/?q=by%3Anpub1dejts0qlva8mqzjlrxqkc2tmvs2t7elszky5upxaf3jha9qs9m5q605uc4+++kind%3A10002&#34;&gt;https://nostr.band/?q=by%3Anpub1dejts0qlva8mqzjlrxqkc2tmvs2t7elszky5upxaf3jha9qs9m5q605uc4+++kind%3A10002&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;nostr.band is an indexing service, it probably has your relay list.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Replace &lt;code&gt;npub1xxx&lt;/code&gt; in the URL with your own npub&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Click &amp;quot;VIEW JSON&amp;quot; from the menu to see the raw event&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Or use the &lt;code&gt;nak&lt;/code&gt; tool if you know the relays&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak req -k 10002 -a &amp;lt;your-pubkey&amp;gt; wss://relay1.com wss://relay2.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Replace &lt;code&gt;&amp;lt;your-pubkey&amp;gt;&lt;/code&gt; with your public key in hex format (you can get it using &lt;code&gt;nak decode &amp;lt;your-npub&amp;gt;&lt;/code&gt;)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Sign and publish the event:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use a Nostr client that supports kind 10002 events&lt;/li&gt;&#xA;&lt;li&gt;Or use the &lt;code&gt;nak&lt;/code&gt; command-line tool:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak event --sec ncryptsec1... wss://relay1.com wss://relay2.com $(cat event.json)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Important Security Notes:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Never share your nsec (private key) with anyone&lt;/li&gt;&#xA;&lt;li&gt;Consider using NIP-49 encrypted keys for better security&lt;/li&gt;&#xA;&lt;li&gt;Never paste your nsec or private key into the terminal. The command will be saved in your shell history, exposing your private key. To clear the command history:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For bash: use &lt;code&gt;history -c&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;For zsh: use &lt;code&gt;fc -W&lt;/code&gt; to write history to file, then &lt;code&gt;fc -p&lt;/code&gt; to read it back&lt;/li&gt;&#xA;&lt;li&gt;Or manually edit your shell history file (e.g., &lt;code&gt;~/.zsh_history&lt;/code&gt; or &lt;code&gt;~/.bash_history&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;if you&#39;re using &lt;code&gt;zsh&lt;/code&gt;, use &lt;code&gt;fc -p&lt;/code&gt; to prevent the next command from being saved to history&lt;/li&gt;&#xA;&lt;li&gt;Or temporarily disable history before running sensitive commands:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;unset HISTFILE&#xA;nak key encrypt ...&#xA;set HISTFILE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;how-to-securely-create-nip-49-encypted-private-key&#34;&gt;How to securely create NIP-49 encypted private key&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Read your private key (input will be hidden)&#xA;read -s SECRET &#xA;# Read your password (input will be hidden)&#xA;read -s PASSWORD&#xA;# encrypt command&#xA;echo &amp;quot;$SECRET&amp;quot; | nak key encrypt &amp;quot;$PASSWORD&amp;quot;&#xA;# copy and paste the ncryptsec1 text from the output&#xA;read -s ENCRYPTED&#xA;nak key decrypt &amp;quot;$ENCRYPTED&amp;quot;&#xA;# clear variables from memory&#xA;unset SECRET PASSWORD ENCRYPTED&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;On a Windows command line, to read from stdin and use the variables in &lt;code&gt;nak&lt;/code&gt; commands, you can use a combination of &lt;code&gt;set /p&lt;/code&gt; to read input and then use those variables in your command. Here&#39;s an example:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@echo off&#xA;set /p &amp;quot;SECRET=Enter your secret key: &amp;quot;&#xA;set /p &amp;quot;PASSWORD=Enter your password: &amp;quot;&#xA;&#xA;echo %SECRET%| nak key encrypt %PASSWORD%&#xA;&#xA;:: Clear the sensitive variables&#xA;set &amp;quot;SECRET=&amp;quot;&#xA;set &amp;quot;PASSWORD=&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;If your key starts with &lt;code&gt;ncryptsec1&lt;/code&gt;, the &lt;code&gt;nak&lt;/code&gt; tool will securely prompt you for a password when using the &lt;code&gt;--sec&lt;/code&gt; parameter, unless the command is used with a pipe &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak event --sec ncryptsec1... wss://relay1.com wss://relay2.com $(cat event.json)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Verify the event was published:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Check if your relay list is visible on other relays&lt;/li&gt;&#xA;&lt;li&gt;Use the &lt;code&gt;nak&lt;/code&gt; tool to fetch your kind 10002 events:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nak req -k 10002 -a &amp;lt;your-pubkey&amp;gt; wss://relay1.com wss://relay2.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;Testing your relay:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Try connecting to your relay using different Nostr clients&lt;/li&gt;&#xA;&lt;li&gt;Verify you can both read from and write to your relay&lt;/li&gt;&#xA;&lt;li&gt;Check if events are being properly stored and retrieved&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Use multiple Nostr clients to test different aspects of your relay&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If anyone in the community has a more efficient method of doing things like updating outbox relays, please share your insights in the comments. Your expertise would be greatly appreciated!&lt;/p&gt;&#xA;</content>
    <link href="https://blog.nostrize.me/naddr1qvzqqqr4gupzqmnyhq7p7e60kq997xvpds5hkeq5hanlq9vffczd6nr9062pqthgqq2j6ezsgu69j7n92cmxxmfsgyeyyvjtxfuk7lwjq6s.html" rel="alternate"></link>
    <link href="https://image.nostr.build/f708db07b85c002b20b3159b48447d51cbcb0bae0f5717ce6dbc060580c8b35d.jpg" rel="enclosure" type="image/jpeg" length="0"></link>
    <summary type="html">Step-by-step guide to running a personal Nostr relay on Android using Citrine and Cloudflare Tunnels. Learn how to set up secure WebSocket connections, manage relay lists, and maintain a reliable private relay with your custom domain.</summary>
    <author>
      <name>dhalsim</name>
    </author>
  </entry>
</feed>